name: Test & Deploy to PyPI / TestPyPI

on:
  push:
    branches: [main]  # Run tests on every push to main
  release:
    types: [published]  # Trigger on GitHub release

jobs:
  test:
    runs-on: ubuntu-22.04
    container:
      image: python:3.12-slim
    strategy:
      matrix: 
        python-version: ["3.12"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}  
        uses: actions/setup-python@v4
        with:  
            python-version: ${{ matrix.python-version }} 

      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies
        run: poetry install

      - name: Run tests
        run: poetry run pytest -v -s

  deploy:
    if: github.event_name == 'release'
    runs-on: ubuntu-22.04
    needs: test

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: pip install poetry

      - name: Determine target repository
        id: repo
        run: |
          if [[ "${{ github.event.release.prerelease }}" == "true" ]]; then
            echo "repository_url=https://test.pypi.org/legacy/" >> $GITHUB_OUTPUT
            echo "token=${{ secrets.TEST_PYPI_API_TOKEN }}" >> $GITHUB_OUTPUT
          else
            echo "repository_url=https://upload.pypi.org/legacy/" >> $GITHUB_OUTPUT
            echo "token=${{ secrets.PYPI_API_TOKEN }}" >> $GITHUB_OUTPUT
          fi

      - name: Configure Poetry with token
        run: |
          poetry config repositories.custom ${{ steps.repo.outputs.repository_url }}
          poetry config pypi-token.custom ${{ steps.repo.outputs.token }}

      - name: Install dependencies (no dev)
        run: poetry install --no-dev

      - name: Publish to correct PyPI
        run: poetry publish --build -r custom
